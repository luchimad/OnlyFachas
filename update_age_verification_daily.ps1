# Script para cambiar la verificaci√≥n de edad a expiraci√≥n diaria
Write-Host "üìÖ Actualizando verificaci√≥n de edad a expiraci√≥n diaria..." -ForegroundColor Cyan

# Leer el archivo actual
$content = Get-Content "src/hooks/useAgeVerification.ts" -Raw

# Cambiar el comentario y la constante
$content = $content -replace "// La verificaci√≥n expira despu√©s de 30 d√≠as", "// La verificaci√≥n expira al final del d√≠a actual"
$content = $content -replace "const VERIFICATION_EXPIRY_DAYS = 30;", "// Ya no usamos d√≠as fijos, calculamos hasta el final del d√≠a"

# Actualizar la funci√≥n confirmAge para calcular hasta el final del d√≠a
$oldConfirmAge = "  const confirmAge = useCallback(() => {`n    try {`n      const now = new Date();`n      const expiryDate = new Date(now.getTime() + (VERIFICATION_EXPIRY_DAYS * 24 * 60 * 60 * 1000));`n      `n      localStorage.setItem(AGE_VERIFICATION_KEY, 'true');`n      localStorage.setItem(AGE_VERIFICATION_EXPIRY_KEY, expiryDate.toISOString());`n      `n      setIsAgeConfirmed(true);`n      console.log('Verificaci√≥n de edad confirmada hasta:', expiryDate.toLocaleDateString());`n    } catch (error) {`n      console.error('Error al guardar verificaci√≥n de edad:', error);`n      // A√∫n as√≠ confirmar para la sesi√≥n actual`n      setIsAgeConfirmed(true);`n    }`n  }, []);"

$newConfirmAge = "  const confirmAge = useCallback(() => {`n    try {`n      const now = new Date();`n      // Calcular hasta el final del d√≠a actual (23:59:59)`n      const endOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59, 999);`n      `n      localStorage.setItem(AGE_VERIFICATION_KEY, 'true');`n      localStorage.setItem(AGE_VERIFICATION_EXPIRY_KEY, endOfDay.toISOString());`n      `n      setIsAgeConfirmed(true);`n      console.log('Verificaci√≥n de edad confirmada hasta el final del d√≠a:', endOfDay.toLocaleDateString());`n    } catch (error) {`n      console.error('Error al guardar verificaci√≥n de edad:', error);`n      // A√∫n as√≠ confirmar para la sesi√≥n actual`n      setIsAgeConfirmed(true);`n    }`n  }, []);"

$content = $content -replace [regex]::Escape($oldConfirmAge), $newConfirmAge

# Actualizar el comentario del hook
$content = $content -replace "- Solo se ejecuta una vez por sesi√≥n", "- Solo se ejecuta una vez por d√≠a"
$content = $content -replace "- Persiste en localStorage con expiraci√≥n", "- Persiste hasta el final del d√≠a actual"

# Guardar el archivo actualizado
$content | Set-Content "src/hooks/useAgeVerification.ts" -Encoding UTF8

Write-Host "‚úÖ Verificaci√≥n de edad actualizada a expiraci√≥n diaria" -ForegroundColor Green
Write-Host "üìÖ Ahora el cartel aparecer√° solo una vez por d√≠a" -ForegroundColor Yellow
Write-Host "üöÄ El servidor se reiniciar√° autom√°ticamente..." -ForegroundColor Yellow














